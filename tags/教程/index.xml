<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>教程 on SMWHff&#39;s Blog | 梦痕编程</title>
    <link>https://SMWHff.com/tags/%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in 教程 on SMWHff&#39;s Blog | 梦痕编程</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 18 Jan 2023 15:02:28 +0800</lastBuildDate>
    <atom:link href="https://SMWHff.com/tags/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lua编程：掌握字符串处理技巧</title>
      <link>https://SMWHff.com/posts/lua/lua_string_manipulation_techniques/</link>
      <pubDate>Wed, 18 Jan 2023 15:02:28 +0800</pubDate>
      <guid>https://SMWHff.com/posts/lua/lua_string_manipulation_techniques/</guid>
      <description>标题: Lua编程：掌握字符串处理技巧
作者: 神梦无痕
邮箱: smwh@vip.qq.com
版权: 本人所有文章，都遵守“署名-非商业性使用-相同方式共享 2.5 中国大陆”协议条款。
A、string 库中字符索引 所有的字符索引从前往后是 1, 2, 3...； 从后往前是 -1, -2, -3...。 B、string 库中所有函数直接操作字符串，而是返回一个结果 string.len(s)：返回字符串的长度
string.lower(s)：变小写
string.upper(s)：变大写
string.rep(s,n)：将 s 拷贝 n 份,并连接起来,返回
string.sub(s,i [,j])：取 s 中从 i 开始到 j 为止的自字符串.默认 j 为长度 -i 表示倒数
1. string.find(s, pattern, pos) 第1个参数：源字符串 第2个参数：待搜索之模式串
第3个参数：A hint, 从 pos 位置开始搜索</description>
    </item>
    <item>
      <title>Windows 安装 Appium 教程</title>
      <link>https://SMWHff.com/posts/appium/windows_appium_installation_tutorial/</link>
      <pubDate>Wed, 18 Jan 2023 14:30:21 +0800</pubDate>
      <guid>https://SMWHff.com/posts/appium/windows_appium_installation_tutorial/</guid>
      <description>标题: Windows 安装 Appium 教程
作者: 神梦无痕
邮箱: smwh@vip.qq.com
版权: 本人所有文章，都遵守“署名-非商业性使用-相同方式共享 2.5 中国大陆”协议条款。
1. 部署 JAVA JDK 环境 1. JDK下载
华为镜像源：jdk-8u181-windows-x64.exe 华为公共库：jdk-8u181-windows-x64.exe 清华镜像源：OpenJDK8U-jdk_x64_windows_hotspot_8u312b07.msi 2. 配置 JAVA 环境变量
按 Win+R 快捷键，输入 sysdm.cpl 后按 Enter，打开【系统属性】界面 切换到【高级】选项卡，点击【环境变量】按钮 点击【系统变量】下的【新建】按钮，设置 JAVA_HOME 路径，注意设置成你自己安装的路径 1 C:\Program Files\Java\jdk1.8.0_181 点击【系统变量】下的【新建】按钮，设置 CLASSPATH 路径，注意最前面有个点 1 .;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar 点击【系统变量】列表里双击【PATH】变量，新建两条路径 1 2 %JAVA_HOME%\bin; %JAVA_HOME%\jre\bin; 2.</description>
    </item>
    <item>
      <title>通过 Docker 安装 Testlink 平台教程</title>
      <link>https://SMWHff.com/posts/docker/installing_testlink_by_docker/</link>
      <pubDate>Wed, 18 Jan 2023 13:30:21 +0800</pubDate>
      <guid>https://SMWHff.com/posts/docker/installing_testlink_by_docker/</guid>
      <description>通过 Docker 安装 Testlink 平台教程 前提条件：需要先部署好 Docker 环境
1. 创建容器网络 1 docker network create test_link 2. 安装 MariaDB 数据库（使用 testlink 网络） 1 2 3 4 5 6 7 docker run -d --name mariadb --net=test_link \ --restart=always --privileged=true \ -e MARIADB_ROOT_PASSWORD=mariadb \ -e MARIADB_USER=bn_testlink \ -e MARIADB_PASSWORD=bn_testlink \ -e MARIADB_DATABASE=bitnami_testlink \ bitnami/mariadb:10.</description>
    </item>
    <item>
      <title>通过 Docker 安装 Nginx 服务教程</title>
      <link>https://SMWHff.com/posts/docker/installing_nginx_by_docker/</link>
      <pubDate>Wed, 18 Jan 2023 13:27:19 +0800</pubDate>
      <guid>https://SMWHff.com/posts/docker/installing_nginx_by_docker/</guid>
      <description>通过 Docker 安装 Nginx 服务教程 前提条件：需要先部署好 Docker 环境
1. 运行 nginx 服务 默认端口：80
默认目录：/opt/nginx/html
1 docker run -d --name nginx -p 80:80 -v /opt/nginx/html:usr/share/nginx/html nginx:1.17.9 2. 创建一个静态网页 在 /opt/nginx/html 目录下创建一个静态网页文件
1 vim /opt/nginx/html/index.html 1 2 3 4 5 6 7 8 9 10 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Nginx 演示&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;我是一个静态网页&amp;lt;/h1&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 3.</description>
    </item>
    <item>
      <title>通过 Docker 安装 MySQL 服务教程</title>
      <link>https://SMWHff.com/posts/docker/installing_mysql_by_docker/</link>
      <pubDate>Wed, 18 Jan 2023 13:24:44 +0800</pubDate>
      <guid>https://SMWHff.com/posts/docker/installing_mysql_by_docker/</guid>
      <description>通过 Docker 安装 MySQL 服务教程 前提条件：需要先部署好 Docker 环境
1. 运行 MySQL 服务 默认端口：3306
默认账号：root
默认密码：123456
1 docker run -d --name mysql -p 3306:3306 --privileged=true -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.26 2. 进入容器内部终端 1 docker exec -it mysql bash 3. 登录 MySQL 数据库 执行以下命令按 Enter，再输入密码 🔒123456 按 Enter 登录数据库
1 mysql -u root -p 4.</description>
    </item>
    <item>
      <title>通过 Docker 安装 Jira 平台教程</title>
      <link>https://SMWHff.com/posts/docker/installing_jira_by_docker/</link>
      <pubDate>Wed, 18 Jan 2023 13:21:05 +0800</pubDate>
      <guid>https://SMWHff.com/posts/docker/installing_jira_by_docker/</guid>
      <description>通过 Docker 安装 Jira 平台教程 前提条件：需要先部署好 Docker 环境
1. 安装 MySQL 数据库 默认端口：3306
默认账号：root
默认密码：123456
1 2 3 docker run -d -p 3306:3306 \ --name=mysql_jira --privileged=true -u root \ -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7 2. 启动 MySQL 登录 MySQL 1 2 3 docker run -it --link mysql_jira:mysql --rm mysql \ sh -c &amp;#39;exec mysql -h&amp;#34;$MYSQL_PORT_3306_TCP_ADDR&amp;#34; \ -P&amp;#34;$MYSQL_PORT_3306_TCP_PORT&amp;#34; -u root -p&amp;#34;$MYSQL_ENV_MYSQL_ROOT_PASSWORD&amp;#34;&amp;#39; 创建数据库 1 create database jira default character set utf8 collate utf8_bin; 创建用户并授权 1 create user `jira`@`%` identified by &amp;#39;jira&amp;#39;; 1 grant all on *.</description>
    </item>
    <item>
      <title>【Windows】Git 环境配置和上传 GitHub</title>
      <link>https://SMWHff.com/posts/github/windows_git_setup_and_github_upload/</link>
      <pubDate>Wed, 18 Jan 2023 13:15:50 +0800</pubDate>
      <guid>https://SMWHff.com/posts/github/windows_git_setup_and_github_upload/</guid>
      <description>Git 环境配置（Windows） 零基础、小白都能学会
一、注册 GitHub 账号 注册网址： Join GitHub · GitHub
二、下载 Git 客户端安装包 官方下载：Git - Downloading Package
腾讯下载：【Git下载】2023年最新官方正式版Git免费下载 - 腾讯软件中心官网
三、Git 全局配置 安装包安装完后，就可以在桌面右键
点击 Git Bash Here 选项
就可以开始输入命令了
输入配置账号命令 1 git config --global user.name &amp;#34;你的账号&amp;#34; 输入配置邮箱命令 1 git config --global user.email &amp;#34;你的邮箱地址&amp;#34; 输入生成 SSH 公钥命令，然后连续按三次回车就行 1 ssh-keygen -t rsa -C &amp;#34;你的邮箱地址&amp;#34; 输入查看公钥字符串命令，然后复制字符串到剪切板 1 cat ~/.</description>
    </item>
    <item>
      <title>CentOS 部署 Docker 环境教程</title>
      <link>https://SMWHff.com/posts/docker/deploying_docker_on_centos/</link>
      <pubDate>Wed, 18 Jan 2023 13:15:50 +0800</pubDate>
      <guid>https://SMWHff.com/posts/docker/deploying_docker_on_centos/</guid>
      <description>1. 安装依赖： 1 yum -y install yum-utils device-mapper-persistent-data lvm2 2. 添加 yum 源： 1 yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 3. 安装 Docker 1 yum -y install docker-ce 4. 启动 Docker 服务 1 systemctl start docker 5. 开机自启 Docker 服务 1 systemctl enable docker 6. 添加 Docker 源 1 vim /etc/docker/daemon.json 1 2 3 { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://s2nni631.</description>
    </item>
    <item>
      <title>通过 Docker 安装 Jenkins 平台教程</title>
      <link>https://SMWHff.com/posts/docker/installing_jenkins_by_docker/</link>
      <pubDate>Wed, 18 Jan 2023 13:15:50 +0800</pubDate>
      <guid>https://SMWHff.com/posts/docker/installing_jenkins_by_docker/</guid>
      <description>通过 Docker 安装 Jenkins 平台教程（挂载目录） 前提条件：需要先部署好 Docker 环境
Github仓库：https://hub.docker.com/r/jenkins/jenkins/
1. 安装 Jenkins 1 docker pull jenkins/jenkins 2. 创建 Jenkins 目录 1 mkdir /opt/jenkins_smwhff 3. 挂载目录权限 1 chmod 777 /opt/jenkins_smwhff 4. 创建实例容器 1 docker run -d --name jenkins -p 8080:8080 -p 50000:50000 -v /opt/jenkins_smwhff:/var/jenkins_home jenkins/jenkins:l 5. 通过日志查看进度 1 docker logs -f jenkins 5.</description>
    </item>
  </channel>
</rss>
